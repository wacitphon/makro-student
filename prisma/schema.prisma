// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum RefundType {
  POINT
  BANK
}

model User {
  id                Int               @id @default(autoincrement())
  role              Role              @default(USER)
  name              String?
  email             String            @unique
  phone             String?
  password          String
  identityNumber    String?
  branchNumber      String?
  refund            RefundType?
  point             Int               @default(0)
  shippingAddresses Shipping_Address[]
  products          Product[]
  favorites         Favorite[]
}

model Shipping_Address {
  id             Int     @id @default(autoincrement())
  firstName      String  @map("first_name")
  lastName       String  @map("last_name")
  phone          String
  email          String?
  identityNumber String? @map("identity_number")
  company        String?
  branch         String?
  address        String
  apartment      String?
  postalCode     String  @map("postal_code")
  province       String
  district       String
  subDistrict    String  @map("sub_district")
  isMainAddress  Boolean @map("is_main_adderss")
  user           User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId         Int     @map("user_id")
}

model Favorite {
  id               Int                @id @default(autoincrement())
  name             String
  user             User               @relation(fields: [userId], references: [id])
  userId           Int                @map("user_id")
  favoriteProducts Favorite_Product[]
}

model Favorite_Product {
  id         Int      @id @default(autoincrement())
  favorite   Favorite @relation(fields: [favoriteId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  favoriteId Int      @map("favorite_id")
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productId  Int      @map("product_id")
}

model Product {
  id               Int                @id @default(autoincrement())
  stock            Int                @default(0)
  unit             Int                @default(1)
  priceHigh        Int                @map("price_high")
  minPriceHigh     Int                @map("min_price_high")
  priceMedium      Int?               @map("price_medium")
  minPriceMedium   Int?               @map("min_price_medium")
  priceLow         Int?               @map("price_low")
  minPriceLow      Int?               @map("min_price_low")
  detail           String
  width            Decimal
  height           Decimal
  depth            Decimal
  weight           Decimal
  user             User               @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId           Int                @map("user_id")
  favoriteProducts Favorite_Product[]
}

model Serach{
  id                Int   @id @default(autoincrement())
  name              String
  count             Int?  @map("count_low")
}

model User_Serach{
  id                Int   @id @default(autoincrement())
  name              String
  count             Int?  @map("count_low")
}


model cart{
  id                   Int   @id @default(autoincrement())
  totalBeforeDiscount  Int? @map(" totalBeforeDiscount_low")
  discount             Int? @map("discount")
  deliveryFee          Int? @map("deliveryFee")
  total                Int? @map("total")
}
model Cart_Product{
  id                Int   @id @default(autoincrement())
  quantity          Int   @default(0)
}

model Order{
  id                   Int   @id @default(autoincrement())
  totalBeforeDiscount  Int? @map(" totalBeforeDiscount_low")
  discount             Int? @map("discount")
  deliveryFee          Int? @map("deliveryFee")
  total                Int? @map("total")
  createdAt            String
}

model Order_Product{
  id                Int   @id @default(autoincrement())
  quantity          Int   @default(0)
}



model status{
  id                Int   @id @default(autoincrement())
  status            String
  createdAt         String
}

model Category{
  id                Int   @id @default(autoincrement())
  name              String
  count             Int
}

model Product_img{
  id                Int   @id @default(autoincrement())
  url               String
}
model Product_Promotion{
  id                Int   @id @default(autoincrement())
}

model Promotion{
  id                Int   @id @default(autoincrement())
}